#You are given an array prices where prices[i] is the price of a given stock on the ith day.

#You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

#Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        #maxDiff = 0
        #for i in range(len(prices),0):
        #    for j in range(i, len(prices)):
        #        if prices[j] - prices[i] > maxDiff:
        #            maxDiff = prices[j] - prices[i] 
        #return maxDiff
        #Above code works but takes too long
        
        max_profit = 0
        left_pointer = 0
        right_pointer = 1
        while right_pointer < len(prices):
            if prices[right_pointer] - prices[left_pointer] > max_profit:
                max_profit = prices[right_pointer] - prices[left_pointer]
            if prices[right_pointer] < prices[left_pointer]:
                left_pointer = right_pointer
            right_pointer += 1
        return max_profit
            
